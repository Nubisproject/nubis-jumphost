#!/bin/bash
#
# This script is run on every ami change.
#+ This is the place to do things like database initilizations and migrations.
#
#set -x

LOGGER_BIN='/usr/bin/logger'

# Set up the logger command if the binary is installed
if [ ! -x $LOGGER_BIN ]; then
    echo "ERROR: 'logger' binary not found - Aborting"
    #shellcheck disable=SC2128
    echo "ERROR: '$BASH_SOURCE' Line: '$LINENO'"
exit 2
else
    LOGGER="$LOGGER_BIN --stderr --priority local7.info --tag migrate"
fi

# Source the consul connection details from the metadata api
eval "$(curl -s -fq http://169.254.169.254/latest/user-data)"

# Check to see if NUBIS_MIGRATE was set in userdata. If not we exit quietly.
if [ "${NUBIS_MIGRATE:-0}" == '0' ]; then
    exit 0
fi

# Set up the consul url
CONSUL="http://localhost:8500/v1/kv/$NUBIS_STACK/$NUBIS_ENVIRONMENT/config"

instance_id=$(curl -s -fq http://169.254.169.254/latest/meta-data/instance-id)
local_ip=$(curl -s -fq http://169.254.169.254/latest/meta-data/local-ipv4)

EC2_REGION=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')

# First, check with user-data to see i we can find our IP
if [ -z "${elasticip_id}" ]; then
  elasticip_id=$(nubis-metadata NUBIS_JUMPHOST_EIP)
fi

# Second, check with CloudFormation to see if we can find our IP
if [ -z "${elasticip_id}" ]; then

  # is it up yet? Otherwise we need to wait for the stack to finish
  until [ ! -z "${elasticip_id}" ]; do
    $LOGGER "Waiting on Elastic IP to be ready"
    elasticip_id=$(aws --region "$EC2_REGION" cloudformation describe-stacks --stack-name "$NUBIS_STACK" --query "Stacks[].Outputs[?OutputKey=='ElasticIP'].OutputValue" --output text)
    sleep 10
  done

  # If we found it, store it in Consul, just to be thourough
  if [[ ! -z "${elasticip_id}" ]]; then
    curl -s -X PUT -d "$elasticip_id" "$CONSUL/ElasticIP"
  fi

fi

# Third, try and find it in Consul
if [[ -z "${elasticip_id}" ]]; then

# Grab the variables from consul
#+ If this is a new stack we need to wait for the values to be placed in consul
#+ We will test the first and sleep with a timeout
KEYS_UP=-1
COUNT=0
while [ "$KEYS_UP" != "0" ]; do
    # Try for 20 minutes (30 seconds * 20160 attempts = 604800 seconds / 60 seconds / 60 minutes / 12 hours = 7 days)
    if [ ${COUNT} == "20160" ]; then
        $LOGGER "ERROR: Timeout while waiting for keys to be populated in consul."
        exit 1
    fi
    QUERY=$(curl -s "$CONSUL/ElasticIP?raw=1")

    if [ "$QUERY" == "" ]; then
        $LOGGER "Keys not ready yet. Sleeping 30 seconds before retrying..."
        sleep 30
        COUNT=${COUNT}+1
    else
        KEYS_UP=0
    fi
done

elasticip_id=$(curl -s "$CONSUL/ElasticIP?raw=1")

fi

if [[ -z "${instance_id}" ]]; then
    $LOGGER "ERROR: Instance ID not found"
    exit 1
fi

aws ec2 associate-address --instance-id "${instance_id}" --allocation-id "${elasticip_id}" --private-ip-address "${local_ip}" --region "${EC2_REGION}"
RV=$?

if [[ ${RV} != 0 ]]; then
    $LOGGER "ERROR: Unable to associate elastic IP ${elasticip_id} to instance ${instance_id}"
    exit 1
fi
